# ~/.tmux.conf

########################################################################
# ?	lists all keybindings

# Useful commands:
# prefix + ?: List all keybindings
# 'tmux ls' shows the active sessions. You can attach to a particular
# session using 'tmux a -t <n>' where '<n>' is the number of the
# session. Run 'tmux kill-session -t <n>' to kill a session.


# TODO list:
# + Check tmux-resurrect. This is a plugin that enables you to
# restore past tmux environments after system restarts.
########################################################################


# prefix key
# set -g prefix `
# bind-key ` send-prefix # type prefix twice to get backtick char


# Add custom keybiding to reload config
bind r source-file ~/.tmux.conf \; display "Reloaded .tmux.conf!"

# Use Vim bindings
setw -g mode-keys vi	     # copy mode
set-option -g status-keys vi # command prompt

# Mark
# To remove mark, press `prefix + m` again on the marked pane or press `prefix
# + M` anywhere else. Apparently, tmux only supports one mark.
bind \` switch-client -t'{marked}' # switch to marked pane

# Copy mode
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -i -selection clipboard"
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

bind-key -T copy-mode-vi / send-keys -X search-backward
bind-key -T copy-mode-vi ? send-keys -X search-forward

# Use a 256 color terminal
set-option -g default-terminal "tmux-256color"

# Tell tmux the terminal emulator supports RGB colors
# See https://github.com/tmux/tmux/wiki/FAQ
set-option -as terminal-features ",alacritty:RGB"

# Use mouse to select panes
set-option -g mouse on

# Default shell
set -g default-shell '/usr/bin/zsh'

# Keep window open after process exits
# set -g remain-on-exit on

# set -g base-index 1
set-option -g status-interval 1
set-option -g history-limit 50000

# clock
set-window-option -g clock-mode-colour white
set-window-option -g clock-mode-style 24

# Don't wait too long to detect ESC (in milliseconds)
# (useful for Neovim)
set-option -sg escape-time 10

# Forward focus events to apps inside tmux
set-option -g focus-events on


# Pane config ------------------------------

# Create a side pane and match dir to the original pane
# -l N: set the width of the new pane to N columns. Use N% for percentage.
bind t split-window -h -l '40%' -c "#{pane_current_path}" # `t` was show a clock
bind T split-window -hb -l 70 -c "#{pane_current_path}"

# Pane navigation
# bind h select-pane -L
# bind l select-pane -R
# bind j select-pane -D
# bind k select-pane -U
# bind -n C-h select-pane -L
# bind -n C-l select-pane -R
# bind -n C-j select-pane -D
# bind -n C-k select-pane -U

# Pane splitting
bind v split-window -h  # vertical
bind s split-window -v  # horizontal

# Pane resizing
# bind -r C-h resize-pane -L 2
# bind -r C-l resize-pane -R 2
# bind -r C-j resize-pane -D 2
# bind -r C-k resize-pane -U 2

# Kill other panes
bind o kill-pane -a

# Appearance ------------------------------------------

# status bar
set-option -g status-bg black
set-option -g status-fg white
set-option -g status-justify centre
# set-option -g status-position top
set -g status-left '#[fg=yellow] [ #h / #S ] #[fg=green] ['
set -g status-left-length 25
set -g status-right '#[fg=green] ] [ #[fg=blue]%m-%d-%Y #[fg=white]%H:%M#[default]#[fg=green] ]'

# windows
setw -g window-status-current-style fg=green
#setw -g window-status-alert-fg yellow
#setw -g window-status-current-attr underscore


# messages
set-option -g message-style 'fg=cyan, bg=black'


# panes
set-option -g pane-active-border-style 'fg=green, bg=default'
set-option -g pane-border-style 'fg=white, bg=default'

# Plugins -------------------------------------------
set -g @plugin 'tmux-plugins/tpm'

# Integrate fzf with tmux
set -g @plugin 'sainnhe/tmux-fzf'
TMUX_FZF_LAUNCH_KEY="i" # it was `display window information`
bind-key "C-s" run-shell -b "~/.tmux/plugins/tmux-fzf/scripts/session.sh 'switch'"

# Use same keybindings to navigate tmux and vim splits
set -g @plugin 'christoomey/vim-tmux-navigator'
bind C-l send-keys 'C-l'

run '/usr/share/tmux-plugin-manager/tpm'


# Create a couple of sessions at startup ------------------------
new -n main -s term -d
send-keys -t term:0 "cd $HOME/Documents/mydocs/config_files/" Enter

new -n pdfs -s research -d
send-keys -t research:0 "cd $HOME/Documents/pdfs" Enter
neww -n main -t research
send-keys -t research:1 "cd $HOME/Documents/mydocs/research/" Enter

new -n main -s teaching -d
send-keys -t teaching:0 "cd $HOME/Documents/mydocs/teaching/" Enter

# neww -a  # 'neww' is alias for 'new-window'
# select-window -t 1
