# Tmux configuration file
# !ln -s %:p ~/.config/tmux/tmux.conf

########################################################################
# Useful commands:
#
# prefix + ?: List all keybindings
# prefix + /: Describe key
#
# 'tmux ls' shows the active sessions. You can attach to a particular
# session using 'tmux a -t <n>' where '<n>' is the number of the
# session. Run 'tmux kill-session -t <n>' to kill a session.
########################################################################


# prefix key
# set -g prefix `
# bind-key ` send-prefix # type prefix twice to get backtick char


# Add custom keybiding to reload config
bind r source-file ~/.config/tmux/tmux.conf

# Use Vim bindings
setw -g mode-keys vi	     # copy mode
set-option -g status-keys vi # command prompt

# Mark
# To remove mark, press `prefix + m` again on the marked pane or press `prefix
# + M` anywhere else. Apparently, tmux only supports one mark.
bind \` switch-client -t'{marked}' # switch to marked pane

# Copy mode
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -i -selection clipboard"
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

bind-key -T copy-mode-vi / send-keys -X search-backward
bind-key -T copy-mode-vi ? send-keys -X search-forward

# Use a 256 color terminal
set-option -g default-terminal "tmux-256color"

# Tell tmux the terminal emulator supports RGB colors
# See https://github.com/tmux/tmux/wiki/FAQ
# Use `echo $TERM` outside of tmux to check the terminal type
set-option -as terminal-features ",alacritty:RGB"

# Use mouse to select panes
set-option -g mouse on

# Don't run tmux as a login shell
set -g default-command "$SHELL"

# Default shell
set -g default-shell '/usr/bin/zsh'

# Keep window open after process exits
# set -g remain-on-exit on

# set -g base-index 1
set-option -g status-interval 1
set-option -g history-limit 50000

# clock
set-window-option -g clock-mode-colour white
set-window-option -g clock-mode-style 24

# Don't wait too long to detect ESC (in milliseconds)
# (useful for Neovim)
set-option -sg escape-time 10

# Forward focus events to apps inside tmux
set-option -g focus-events on


# Pane config ------------------------------

# Create a side pane and match dir to the original pane
# -l N: set the width of the new pane to N columns. Use N% for percentage.
# To split at the top, use -bv option instead of -v. The -b option means 'before'.
# bind t split-window -h -l '35%' -c "#{pane_current_path}" # `t` was show a clock
# bind T split-window -v -l 10 -c "#{pane_current_path}"

# Vim-style pane navigation
bind h select-pane -L              # Navigate to left pane
bind j select-pane -D              # Navigate to pane below
bind k select-pane -U              # Navigate to pane above
bind l select-pane -R              # Navigate to right pane

# Pane splitting
bind v split-window -h -c "#{pane_current_path}" # vertical
bind s split-window -v -c "#{pane_current_path}" # horizontal

# Pane resizing
# bind -r C-h resize-pane -L 2
# bind -r C-l resize-pane -R 2
# bind -r C-j resize-pane -D 2
# bind -r C-k resize-pane -U 2

# Pane keybindings
bind o kill-pane -a
bind c kill-pane

# Windows config ------------------------------

bind n new-window
bind ] next-window                 # Go to next window
bind [ previous-window             # Go to previous window



# Plugins -------------------------------------------
set -g @plugin 'tmux-plugins/tpm'

set -g @plugin 'egel/tmux-gruvbox'
set -g @tmux_gruvbox 'dark'

# Integrate fzf with tmux
set -g @plugin 'sainnhe/tmux-fzf'
TMUX_FZF_LAUNCH_KEY="b"
bind-key "C-s" run-shell -b "~/.config/tmux/plugins/tmux-fzf/scripts/session.sh 'switch'"

run '/usr/share/tmux-plugin-manager/tpm'


# Create a couple of sessions at startup ------------------------
new -n main -s config -d
send-keys -t config:0 "cd $USER_CONFIG_FILES" Enter

new -n main -s project -d
send-keys -t project:0 "cd $HOME/Documents/mydocs/research/" Enter

# new -n main -s teaching -d
# send-keys -t teaching:0 "cd $HOME/Documents/mydocs/teaching/" Enter
#
# new -n pdfs -s research -d
# send-keys -t research:0 "cd $HOME/Documents/pdfs" Enter
# neww -n main -t research
# send-keys -t research:1 "cd $HOME/Documents/mydocs/research/" Enter

# neww -a  # 'neww' is alias for 'new-window'
# select-window -t 1
